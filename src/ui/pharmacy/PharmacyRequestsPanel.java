/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.pharmacy;

import Services.MailService;
import database.ManufacturingRequestsService;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;
import model.InventoryItem;
import model.Manufacturer;
import model.ManufacturingRequests;
import model.Pharmacy;

/**
 *
 * @author maheshsai
 */
public class PharmacyRequestsPanel extends javax.swing.JPanel {

    /**
     * Creates new form PharmacyRequestsPanel
     */
    
    JSplitPane mainPanel;
    ArrayList<Component> al;
    ManufacturingRequestsService iis;
    Pharmacy ph;
    public PharmacyRequestsPanel(Pharmacy ph, JSplitPane mainPanel, ArrayList<Component> al) {
        initComponents();
        iis = new ManufacturingRequestsService();
        this.mainPanel = mainPanel;
        this.al = al;
        this.ph = ph;
        
        update();
//        this.txtDiagnose.setEditable(false);
    }
    void update() {
        DefaultTableModel model = (DefaultTableModel) this.tblEncounters.getModel();
        model.setRowCount(0);
        ArrayList<ManufacturingRequests> reqs = new ArrayList<>();
        if(ph != null) {
            reqs = this.iis.getAllManufacturingRequestssOfPharmacy(ph.getId());
        } 
        for(ManufacturingRequests item: reqs) {
                Object[] row = new Object[3];
                
                System.out.println("Done");
                if(item.getManufacturer() == null) {
                    row[0] = "NA";
                } else {
                    row[0] = item.getManufacturer().getName();
                }
                row[1] = item;
                row[2] = item.getQty();

                model.addRow(row);
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEncounters = new javax.swing.JTable();
        btnLeave = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDiagnose = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        btnupdateandnotify = new javax.swing.JButton();
        btnNotify = new javax.swing.JButton();

        btnBack1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/back.png"))); // NOI18N
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pharmacy requests");

        tblEncounters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Manufacturer", "Name", "Quantity"
            }
        ));
        tblEncounters.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEncountersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEncounters);

        btnLeave.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        btnLeave.setForeground(new java.awt.Color(255, 0, 0));
        btnLeave.setText("Delete");
        btnLeave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeaveActionPerformed(evt);
            }
        });

        txtDiagnose.setColumns(20);
        txtDiagnose.setRows(5);
        jScrollPane2.setViewportView(txtDiagnose);

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Quantity");

        btnupdateandnotify.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        btnupdateandnotify.setText("Update and Notify");
        btnupdateandnotify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateandnotifyActionPerformed(evt);
            }
        });

        btnNotify.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        btnNotify.setText("Notify via Mail");
        btnNotify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNotifyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(105, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(228, 228, 228))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLeave)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnNotify, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnupdateandnotify, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(btnupdateandnotify)
                        .addGap(18, 18, 18)
                        .addComponent(btnNotify)
                        .addGap(18, 18, 18)
                        .addComponent(btnLeave))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(96, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnBack1)
                .addContainerGap(800, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnBack1)
                .addContainerGap(534, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblEncountersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEncountersMouseClicked
        // TODO add your handling code here:
        int idx = this.tblEncounters.getSelectedRow();
        if(idx<0) {
            JOptionPane.showMessageDialog(this, "Not correct index");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) this.tblEncounters.getModel();

        ManufacturingRequests item = (ManufacturingRequests) model.getValueAt(idx, 1);
        if(item == null) {
            JOptionPane.showMessageDialog(this, "Not correct item");
            return;
        }
            this.btnupdateandnotify.setEnabled(true);
            this.btnNotify.setEnabled(true);
            this.txtDiagnose.setText(String.valueOf(item.getQty()));
            this.txtDiagnose.setEnabled(true);

    }//GEN-LAST:event_tblEncountersMouseClicked

    private void btnLeaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeaveActionPerformed
        // TODO add your handling code here:
        int idx = this.tblEncounters.getSelectedRow();
        if(idx<0) {
            JOptionPane.showMessageDialog(this, "Not correct index");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) this.tblEncounters.getModel();

        ManufacturingRequests item = (ManufacturingRequests) model.getValueAt(idx, 1);
        if(item == null) {
            JOptionPane.showMessageDialog(this, "Not correct item");
            return;
        }
        iis.deleteManufacturingRequests(item.getId());

        update();
        //        this.txtDiagnose.setEditable(false);
        this.btnupdateandnotify.setEnabled(false);
        this.btnNotify.setEnabled(false);
        this.txtDiagnose.setEnabled(false);
        this.txtDiagnose.setText("");
    }//GEN-LAST:event_btnLeaveActionPerformed

    private void btnupdateandnotifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateandnotifyActionPerformed
        // TODO add your handling code here:
        int idx = this.tblEncounters.getSelectedRow();
        if(idx<0) {
            JOptionPane.showMessageDialog(this, "Not correct index");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) this.tblEncounters.getModel();

        ManufacturingRequests item = (ManufacturingRequests) model.getValueAt(idx, 1);
        if(item == null) {
            JOptionPane.showMessageDialog(this, "Not correct item");
            return;
        }
         if(item.getManufacturer()==null) {
           JOptionPane.showMessageDialog(this, "Manufacturer is unknown. Delte and replace request for inventory item");
            return;
       }
        
        if(this.txtDiagnose.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Not correct qty");
            return;
        }

        int qty = Integer.parseInt(this.txtDiagnose.getText());
        
        item.setQty(qty);

//        InventoryItemService mas = new InventoryItemService();
        String s = iis.update(item);
        JOptionPane.showMessageDialog(this, s);

        //update request
       if(item.getManufacturer()==null) {
           JOptionPane.showMessageDialog(this, "Manufacturer is empty");
            return;
       }
        
        String address = item.getManufacturer().getEmail();
        System.out.println(item.getManufacturer());
        System.out.println(address);
        MailService es = new MailService();
        es.actionPerformed("Qty Request updated for "+ item.getName(), "Qty Request updated for "+ item.getName(), item.getPharmacy().getEmail(), address);

        
        update();
        
        //        this.txtDiagnose.setEditable(false);
        this.btnupdateandnotify.setEnabled(false);
        this.btnNotify.setEnabled(false);
        this.txtDiagnose.setEnabled(false);
        this.txtDiagnose.setText("");
    }//GEN-LAST:event_btnupdateandnotifyActionPerformed

    private void btnNotifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNotifyActionPerformed
        // TODO add your handling code here:
        int idx = this.tblEncounters.getSelectedRow();
        if(idx<0) {
            JOptionPane.showMessageDialog(this, "Not correct index");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) this.tblEncounters.getModel();

        ManufacturingRequests item = (ManufacturingRequests) model.getValueAt(idx, 1);
        if(item == null) {
            JOptionPane.showMessageDialog(this, "Not correct item");
            return;
        }
        
        if(this.txtDiagnose.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Not correct qty");
            return;
        }
       
      if(item.getManufacturer()==null) {
           JOptionPane.showMessageDialog(this, "Manufacturer is unknown. Delte and replace request for inventory item");
            return;
       }
        String address = item.getManufacturer().getEmail();
        System.out.println(item.getManufacturer());
        System.out.println(address);
        MailService es = new MailService();
        es.actionPerformed("Qty Requesting for "+ item.getName(), "Qty Request for "+ item.getName(), item.getPharmacy().getEmail(), address);

        
        //        this.txtDiagnose.setEditable(false);
        this.btnupdateandnotify.setEnabled(false);
        this.btnNotify.setEnabled(false);
        this.txtDiagnose.setEnabled(false);
        this.txtDiagnose.setText("");
    }//GEN-LAST:event_btnNotifyActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        Component c = this.al.get(this.al.size()-1);
        this.al.remove(this.al.size()-1);
        this.mainPanel.setRightComponent(c);
    }//GEN-LAST:event_btnBack1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnLeave;
    private javax.swing.JButton btnNotify;
    private javax.swing.JButton btnupdateandnotify;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblEncounters;
    private javax.swing.JTextArea txtDiagnose;
    // End of variables declaration//GEN-END:variables
}
