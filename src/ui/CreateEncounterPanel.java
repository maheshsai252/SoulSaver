/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.encounter;

import Services.ComboItem;
import database.DoctorService;
import database.EncounterService;
import database.PatientService;
import database.VitalSignService;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import model.Doctor;
import model.Encounter;
import model.Patient;
import model.VitalSigns;
import Services.*;
import java.util.Date;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;

/**
 *
 * @author maheshsai
 */
public class CreateEncounterPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateEncounterPanel
     */
    
    PatientService ps = new PatientService();
    DoctorService ds = new DoctorService();
    VitalSignService vs = new VitalSignService();
    JSplitPane mainPanel;
    String types[] = {"General","Surgery"};
    ArrayList<Component> al;
    public CreateEncounterPanel(JSplitPane mainPanel, ArrayList<Component> al) {
        initComponents();
        this.al = al;
        this.mainPanel = mainPanel;
        ArrayList<Patient> patients = this.ps.getAllPatients();
        if(patients!=null) {
        for(Patient patient: patients) {
            this.boxPatients.addItem(new ComboItem(patient.getName(),patient.getId()));
        }
        }
        
        ArrayList<Doctor> doctors = this.ds.getAllDoctors();
        if(doctors!=null) {
        for(Doctor doctor: doctors) {
            this.boxDoctors.addItem(new ComboItem(doctor.getEmail(),doctor.getId()));
        }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        boxPatients = new javax.swing.JComboBox<>();
        boxVitalSigns = new javax.swing.JComboBox<>();
        boxDoctors = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        lblCharge = new javax.swing.JLabel();
        timeSpinner = new javax.swing.JSpinner();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setText("Create Encounter");

        jLabel2.setText("Patient");

        jLabel3.setText("Doctor");

        jLabel4.setText("Vital Sign");

        boxPatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxPatientsActionPerformed(evt);
            }
        });

        boxVitalSigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxVitalSignsActionPerformed(evt);
            }
        });

        boxDoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxDoctorsActionPerformed(evt);
            }
        });

        btnAdd.setText("Create");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel5.setText("Date");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel6.setText("Type");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Regular", "Surgery" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        timeSpinner.setModel(new javax.swing.SpinnerDateModel());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(btnBack)
                        .addGap(207, 207, 207)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(72, 72, 72)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(boxVitalSigns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boxPatients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boxDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(355, 355, 355)
                        .addComponent(btnAdd)))
                .addContainerGap(289, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(357, 357, 357))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnBack)))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(boxPatients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(boxVitalSigns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(boxDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(timeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(lblCharge)
                .addGap(28, 28, 28)
                .addComponent(btnAdd)
                .addGap(87, 87, 87))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 865, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 8, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 9, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void boxPatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxPatientsActionPerformed
        // TODO add your handling code here:
        //        this.boxVitalSigns.removeAll();
        this.boxVitalSigns.removeAllItems();
        Object item = this.boxPatients.getSelectedItem();
        if(item == null) {
            return;
        }
        String patientId = ((ComboItem)item).getValue();
        ArrayList<VitalSigns> vss = this.vs.getAllvitalsignsOfPatient(patientId);
        if(vss == null) {
            return;
        }
        for(VitalSigns v: vss) {
            this.boxVitalSigns.addItem(new ComboItem(v.getDate()+" BP : "+v.getBloodPressure()+" heart rate: "+v.getHeartRate(), v.getId()));
        }
    }//GEN-LAST:event_boxPatientsActionPerformed

    private void boxVitalSignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxVitalSignsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxVitalSignsActionPerformed
    void updatecharges() {
        Object item = this.boxDoctors.getSelectedItem();
        if(item == null) {
            return;
        }
        String did = ((ComboItem)item).getValue();
        Doctor d = this.ds.getDoctor(did);
        String type = types[this.jComboBox1.getSelectedIndex()];
        System.out.println(d.getId());
         System.out.println(  d.getConsultation_charges());
        if(type.equals("General")) {
            this.lblCharge.setText(String.valueOf(d.getConsultation_charges()));
        } else {
            this.lblCharge.setText(String.valueOf(d.getSurgery_charges()));

        }
    }
    private void boxDoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxDoctorsActionPerformed
        // TODO add your handling code here:
        
        updatecharges();
        
    }//GEN-LAST:event_boxDoctorsActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        Object item = this.boxPatients.getSelectedItem();
        Date cd = ((SpinnerDateModel)timeSpinner.getModel()).getDate();
        System.out.println(cd);
        if(item == null) {
            JOptionPane.showMessageDialog(this, "patient can't be null");
            return;
        }
        String patientid = ((ComboItem)item).getValue();

        Object item1 = this.boxVitalSigns.getSelectedItem();
        if(item1==null) {
            JOptionPane.showMessageDialog(this, "VitalSigns can't be null");
            return;
        }
        String vitalsignid = ((ComboItem)item1).getValue();

        Object item2 = this.boxDoctors.getSelectedItem();
        if(item2 == null) {
            JOptionPane.showMessageDialog(this, "doctor can't be null");
            return;
        }
//        if(this.jDateChooser1.getDate() == null) {
//            JOptionPane.showMessageDialog(this, "date can't be null");
//            return;
//        }
        String doctorid = ((ComboItem)item2).getValue();
        String type = types[this.jComboBox1.getSelectedIndex()];
        if((this.lblCharge.getText().isEmpty()) && !(ValidationServices.isNumeric(this.lblCharge.getText()))) {
            JOptionPane.showMessageDialog(this, "Not correct input");
            return;
        }
        double charges = Double.parseDouble(this.lblCharge.getText());
        Encounter ec = new Encounter(vitalsignid,patientid,doctorid,cd,type, charges);
        EncounterService es = new EncounterService();
        es.create(ec);
        JOptionPane.showMessageDialog(this, "Successfully created");
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        Component c = this.al.get(this.al.size()-1);
        this.al.remove(this.al.size()-1);
        this.mainPanel.setRightComponent(c);
    }//GEN-LAST:event_btnBackActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        this.updatecharges();
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<ComboItem> boxDoctors;
    private javax.swing.JComboBox<ComboItem> boxPatients;
    private javax.swing.JComboBox<ComboItem> boxVitalSigns;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCharge;
    private javax.swing.JSpinner timeSpinner;
    // End of variables declaration//GEN-END:variables
}
